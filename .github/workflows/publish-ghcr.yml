name: Build & Publish Docker Image

on:
    workflow_dispatch:
      # Inputs the workflow accepts.
      inputs:
        name:
          # Friendly description to be shown in the UI instead of 'name'
          description: "Builds a docker container and publishes to ghcr.io"
          # Default value if no value is explicitly provided
          default: 'Build and publish docker container'
          # Input has to be provided for the workflow to run
          required: true
          # The data type of the input
          type: string

jobs:
    build_and_publish:
        runs-on: ubuntu-latest
        steps:
            - name: Build and push image
              uses: actions/checkout@v4

            - name: Log in to the Container registry
              uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push the image
              run: |
               docker build . --tag ghcr.io/kamilkrauze/flaskapp:latest
               docker push ghcr.io/kamilkrauze/flaskapp:latest
               docker push ghcr.io/kamilkrauze/flaskapp:latest
              
    # SSH into Google Cloud Platform and, update, build and deploy docker container.
    UPD-SSH2VM:
      runs-on: ubuntu-latest
      needs: [build_and_publish]

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
      
        - name: Set up Google Cloud SDK
          uses: google-github-actions/setup-gcloud@v0.2.0
          with:
            service_account_key: ${{ secrets.GCLOUD_JSON_KEY }}
    
        - id: 'auth'
          name: Authenticate on GCP
          uses: 'google-github-actions/auth@v2'
          with:
            credentials_json: '${{ secrets.GCLOUD_JSON_KEY }}'

        - name: SSH into VM
          run: gcloud compute ssh --project=${{ secrets.GCLOUD_PROJECT_ID }} --zone=${{ secrets.VM_REGION }} ${{ secrets.VM_NAME }} --quiet --command="sudo docker stop myflix; sudo docker rm myflix; sudo docker image rm ghcr.io/kamilkrauze/flaskapp:latest; sudo docker pull ghcr.io/kamilkrauze/flaskapp:latest; sudo docker run -dp 80:80 --name myflix ghcr.io/kamilkrauze/flaskapp:latest"

